// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//O USUÁRIO
model User {
  id                String @id @default(uuid())
  idCompanyEmployee String
  firstName         String
  lastName          String
  passWord          String
  isActive          Boolean
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  OrderForLunch     OrderForLunch[] //PEDIDO //VINCULO VIA SOMENTE CODIGO PRA FECHAR O RELACIONAMENTO
}

//A MARMITA...
model LunchBoxType {
  id                String @id @default(uuid())
  name              String //MARMITA NORMAL SIMPLES
  description       String
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  LunchMealMenu     LunchMealMenu[] //VINCULO VIA SOMENTE CODIGO PRA FECHAR O RELACIONAMENTO
}

//O MENU DAS REFIÇÕES...
model LunchMealMenu {
  id                String @id @default(uuid())
  name              String
  type              String  //FIT OU NORMAL.. USAR ENUNS?
  averageCalories   Decimal
  averageWeight     Decimal
  averagePrice      Decimal
  dessertName       String  //PARA O NOME DA SOBREMESA APENAS...
  nameDayWeek       String  //NOME DO DIA DA SEMANA DO MENU
  description       String
  rateQualityNumber Int     //NOTA DE AVALIAÇÃO
  imageLinkPath     String  //CAMINHO OU URL DA IMAGEN DA MARMITA / CARDÁPIO
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  lunchBox          LunchBoxType @relation(fields: [lunchBoxId], references: [id]) // RELACIONAMENTO
  lunchBoxId        String  //CAMPO QUE ARMAZENA A FK
  OrderForLunch     OrderForLunch[] //VINCULO VIA SOMENTE CODIGO PRA FECHAR O RELACIONAMENTO
}

//O PEDIDO
model OrderForLunch {
  id                String @id @default(uuid())
  orderValue        Decimal //VALOR DO PEDIDO.. MULTIPLICA O PREÇO PELA QUANTIDADE
  amount            Int     //A QUANTIDADE
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  lunchMeal         LunchMealMenu @relation(fields: [lunchMealId], references: [id]) // RELACIONAMENTO
  lunchMealId       String //CAMPO QUE ARMAZENA A FK
  userOder          User @relation(fields: [userOderId], references: [id]) // RELACIONAMENTO
  userOderId        String //CAMPO QUE ARMAZENA A FK
}

//A TABELA QUE VAI ARMAZENAR OS PARÂMETROS DE CONFIGURALÇÃO
model AppScopeConfig {
  id                String @id @default(uuid())
  userLimitbuy      Int       //O LIMITE DE COMPRAS / PEDIDOS DOS USUÁRIOS POR DIA
  dailyTimeout      Int       //LIMITE DE TEMPO POR DIA PARA PEDIDOS --> EM MINUTOS.. CONVERSÃO!?
  startDailyTimeout DateTime  //INÍCIO DA JANELA DE PEDIDOS DIÁRIA
  endtDailyTimeout  DateTime  //FIM DA JANELA DE PEDIDOS DIÁRIA
  isActive          Boolean   //CONFIGURAÇÃO ATIVA... OBRIGATÓRIO HAVER PELO MENOS UMA ATIVA??.. SE NÃO ACHAR ALGUMA ATIVA ou estiver INATIVA DEIXAR O PADRÃO DO COD.
}
