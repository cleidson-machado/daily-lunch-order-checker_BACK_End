var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.916,1,1.881]],["body/controllers/AppController.html",[0,1.479,1,3.039,2,1.189,3,0.417,4,0.353,5,0.353,6,3.227,7,0.628,8,1.479,9,4.575,10,2.174,11,0.038,12,0.79,13,3.91,14,1.189,15,1.094,16,0.75,17,0.628,18,4.865,19,2.174,20,1.951,21,2.643,22,3.227,23,0.417,24,0.125,25,1.444,26,2.174,27,1.31,28,3.91,29,0.03,30,0.03]],["title/modules/AppModule.html",[31,1.009,32,1.881]],["body/modules/AppModule.html",[1,3.004,2,1.298,3,0.34,4,0.288,5,0.288,11,0.038,16,0.796,17,0.513,21,2.747,22,2.635,23,0.34,24,0.102,29,0.026,30,0.026,31,1.43,32,3.749,33,1.3,34,1.739,35,2.635,36,2.635,37,2.635,38,3.061,39,3.061,40,3.061,41,3.061,42,2.13,43,1.593,44,1.593,45,3.192,46,2.373,47,4.268,48,3.192,49,3.192,50,2.13,51,2.13,52,1.775,53,3.192,54,2.13,55,1.775,56,3.192,57,2.268,58,1.775,59,3.192]],["title/injectables/AppService.html",[21,1.503,60,0.751]],["body/injectables/AppService.html",[3,0.44,4,0.373,5,0.373,7,0.663,8,1.53,9,4.664,11,0.037,12,0.835,14,1.256,15,1.132,16,0.585,17,0.663,21,2.511,23,0.44,24,0.132,27,1.384,29,0.031,30,0.031,60,1.255,61,1.859,62,3.41,63,4.131,64,4.131,65,4.131,66,4.131,67,4.131,68,4.131]],["title/controllers/LunchBoxTypeController.html",[0,0.916,69,1.881]],["body/controllers/LunchBoxTypeController.html",[0,0.697,2,0.697,3,0.244,4,0.207,5,0.207,7,0.368,8,1.027,10,2.75,11,0.038,12,0.999,14,1.504,15,1.258,16,0.669,17,0.368,19,1.274,20,1.143,23,0.244,24,0.073,25,0.846,26,1.274,27,1.658,29,0.021,30,0.021,50,1.686,51,2.919,52,2.845,69,2.111,70,1.889,71,1.891,72,1.431,73,1.15,74,1.521,75,1.805,76,1.377,77,1.377,78,2.111,79,2.401,80,1.031,81,3.032,82,2.111,83,2.291,84,1.746,85,1.437,86,1.584,87,1.502,88,2.111,89,2.291,90,0.933,91,2.111,92,2.291,93,2.139,94,0.933,95,2.111,96,2.291,97,1.431,98,2.111,99,2.291,100,1.628,101,2.111,102,2.291,103,2.508,104,0.933,105,1.431,106,1.431,107,1.431,108,1.431,109,1.431,110,1.891,111,1.891,112,2.004,113,1.891,114,2.291,115,1.891,116,1.628,117,2.291,118,2.291,119,1.431,120,2.291,121,1.431,122,3.379,123,1.628,124,1.431,125,2.291]],["title/classes/LunchBoxTypeDto.html",[24,0.096,81,1.675]],["body/classes/LunchBoxTypeDto.html",[3,0.289,4,0.245,5,0.245,7,0.436,11,0.038,12,0.969,15,1.078,23,0.289,24,0.087,29,0.024,30,0.024,51,2.826,70,1.867,73,1.078,81,2.125,85,1.344,87,1.322,126,1.511,127,3.591,128,2.243,129,2.667,130,2.243,131,2.243,132,2.243,133,2.243,134,2.243,135,2.243,136,2.243,137,1.356,138,3.157,139,4.796,140,1.907,141,2.761,142,2.761,143,2.996,144,2.996,145,2.717,146,2.996,147,2.996,148,2.996,149,2.387,150,2.996,151,2.717,152,2.996,153,3.157,154,3.154,155,3.408,156,2.715,157,2.717,158,3.154,159,2.715,160,2.717,161,2.387,162,2.996,163,2.717,164,2.243,165,2.717,166,2.717,167,2.243,168,2.717,169,2.387,170,2.387,171,2.387]],["title/modules/LunchBoxTypeModule.html",[31,1.009,38,1.675]],["body/modules/LunchBoxTypeModule.html",[2,1.419,3,0.39,4,0.33,5,0.33,11,0.038,16,0.766,17,0.588,23,0.39,24,0.117,29,0.029,30,0.029,31,1.564,33,1.491,34,1.902,38,3.27,42,2.329,43,1.827,44,1.827,46,2.596,50,2.329,51,2.701,52,2.036,69,3.21,70,1.352,112,2.852,113,3.022,172,3.022,173,3.022,174,1.575,175,3.662,176,3.662,177,1.491]],["title/injectables/LunchBoxTypeService.html",[60,0.751,112,1.503]],["body/injectables/LunchBoxTypeService.html",[3,0.254,4,0.215,5,0.215,7,0.383,8,1.058,11,0.038,12,1.014,14,1.461,15,1.218,16,0.582,17,0.383,23,0.254,24,0.076,25,0.881,27,1.611,29,0.021,30,0.021,51,2.904,52,2.881,60,0.868,61,1.074,70,1.961,73,1.081,74,1.85,75,1.841,76,1.418,77,1.418,80,1.567,81,2.881,84,1.775,85,1.461,86,1.611,87,1.383,90,1.418,93,2.044,94,1.418,104,0.972,111,1.969,112,1.737,127,1.695,137,1.737,174,1.245,177,0.972,178,1.969,179,3.216,180,1.936,181,1.49,182,1.49,183,2.386,184,2.386,185,3.002,186,2.386,187,2.386,188,2.386,189,1.936,190,2.386,191,2.823,192,1.49,193,3.481,194,2.672,195,2.386,196,2.175,197,2.386,198,2.386,199,1.49,200,2.386,201,2.386]],["title/controllers/LunchMealMenuController.html",[0,0.916,202,1.881]],["body/controllers/LunchMealMenuController.html",[0,0.697,2,0.697,3,0.244,4,0.207,5,0.207,7,0.368,8,1.027,10,2.75,11,0.038,12,0.999,14,1.504,15,1.258,16,0.669,17,0.368,19,1.274,20,1.143,23,0.244,24,0.073,25,0.846,26,1.274,27,1.658,29,0.021,30,0.021,50,1.686,54,2.919,55,2.845,70,1.889,72,1.431,73,1.063,74,1.521,75,1.805,76,1.377,77,1.377,78,2.111,79,2.401,80,1.031,82,2.111,84,1.746,85,1.437,86,1.584,87,1.502,88,2.111,90,0.933,91,2.111,93,2.139,94,0.933,95,2.111,97,1.431,98,2.111,100,1.628,101,2.111,103,2.508,104,0.933,105,1.431,106,1.431,107,1.431,108,1.431,109,1.431,110,1.891,115,1.891,116,1.628,119,1.431,121,1.431,123,1.628,124,1.431,202,2.111,203,1.891,204,2.401,205,3.032,206,2.291,207,2.291,208,2.291,209,2.291,210,2.291,211,2.291,212,1.891,213,2.004,214,1.891,215,2.291,216,2.291,217,2.291,218,2.291,219,3.379,220,2.291]],["title/classes/LunchMealMenuDto.html",[24,0.096,205,1.675]],["body/classes/LunchMealMenuDto.html",[3,0.163,4,0.138,5,0.138,7,0.245,11,0.038,12,1.043,15,1.177,16,0.216,23,0.163,24,0.049,29,0.015,30,0.015,54,2.882,70,1.934,73,1.205,85,0.945,87,0.984,126,0.849,129,1.728,138,3.349,140,1.232,141,1.941,142,1.941,143,2.23,144,2.23,146,2.619,147,2.619,148,3.112,149,1.542,150,2.23,152,3.271,153,3.043,155,2.979,156,1.754,158,2.038,159,3.72,161,1.542,162,3.224,164,2.038,169,1.542,170,1.542,171,1.542,204,3.54,205,1.373,221,3.72,222,1.261,223,3.108,224,3.108,225,3.108,226,3.108,227,3.108,228,3.108,229,3.108,230,3.108,231,3.791,232,1.527,233,2.038,234,2.469,235,4.744,236,3.791,237,3.642,238,1.527,239,2.038,240,2.469,241,1.527,242,2.469,243,2.469,244,1.527,245,1.527,246,2.469,247,1.527,248,2.469,249,1.527,250,3.569,251,2.469,252,2.469,253,2.038,254,2.469,255,2.469,256,2.469,257,1.527,258,2.038,259,2.038,260,2.469,261,2.038,262,1.754,263,2.038,264,1.527,265,1.527,266,2.469,267,2.469,268,1.527,269,2.469,270,2.565,271,2.469,272,1.527,273,2.469,274,2.469,275,2.469,276,2.469,277,1.527,278,1.261,279,1.527,280,1.527,281,1.527,282,2.469,283,1.527,284,1.527,285,1.527,286,1.527,287,1.527,288,1.527,289,1.261,290,1.527,291,1.527,292,1.261,293,1.261,294,1.261,295,1.261,296,1.261]],["title/modules/LunchMealMenuModule.html",[31,1.009,39,1.675]],["body/modules/LunchMealMenuModule.html",[2,1.419,3,0.39,4,0.33,5,0.33,11,0.038,16,0.766,17,0.588,23,0.39,24,0.117,29,0.029,30,0.029,31,1.564,33,1.491,34,1.902,39,3.27,42,2.329,43,1.827,44,1.827,46,2.596,50,2.329,54,2.701,55,2.036,70,1.352,174,1.575,177,1.491,202,3.21,213,2.852,214,3.022,297,3.022,298,3.022,299,3.662,300,3.662]],["title/injectables/LunchMealMenuService.html",[60,0.751,213,1.503]],["body/injectables/LunchMealMenuService.html",[3,0.254,4,0.215,5,0.215,7,0.383,8,1.058,11,0.038,12,1.014,14,1.461,15,1.218,16,0.582,17,0.383,23,0.254,24,0.076,25,0.881,27,1.611,29,0.021,30,0.021,54,2.904,55,2.881,60,0.868,61,1.074,70,1.961,73,1.081,74,1.85,75,1.841,76,1.418,77,1.418,80,1.567,84,1.775,85,1.461,86,1.611,87,1.383,90,1.418,93,2.044,94,1.418,104,0.972,137,1.737,174,1.245,177,0.972,179,3.216,180,1.936,181,1.49,182,1.49,185,3.002,189,1.936,191,2.823,192,1.49,194,2.672,196,2.175,199,1.49,205,2.881,212,1.969,213,1.737,221,1.695,301,1.969,302,2.386,303,2.386,304,2.386,305,2.386,306,2.386,307,2.386,308,3.481,309,2.386,310,2.386,311,2.386,312,2.386,313,2.386]],["title/controllers/OrderForLunchController.html",[0,0.916,314,1.881]],["body/controllers/OrderForLunchController.html",[0,0.724,2,0.724,3,0.254,4,0.215,5,0.215,7,0.382,8,1.057,10,2.788,11,0.038,12,1.013,14,1.525,15,1.268,16,0.68,17,0.382,19,1.324,20,1.188,23,0.254,24,0.076,25,0.879,26,1.324,27,1.68,29,0.021,30,0.021,50,1.734,57,2.47,58,2.879,72,1.487,73,1.08,74,1.564,75,1.839,76,1.416,77,1.416,78,2.171,80,1.071,82,2.171,84,1.773,85,1.46,86,1.609,87,1.516,88,2.171,90,0.97,91,2.171,93,2.162,94,0.97,95,2.171,97,1.487,98,2.171,101,2.171,103,2.565,104,0.97,105,1.487,106,1.487,107,1.487,108,1.487,109,1.487,116,1.691,119,1.487,121,1.487,124,1.487,180,1.933,189,1.324,314,2.171,315,2.879,316,1.965,317,3.059,318,2.38,319,2.38,320,2.38,321,2.38,322,2.38,323,2.38,324,1.965,325,1.965,326,2.049,327,1.965,328,2.38,329,2.38,330,2.38,331,2.38,332,2.38,333,3.476,334,2.38,335,2.38]],["title/classes/OrderForLunchDto.html",[24,0.096,317,1.675]],["body/classes/OrderForLunchDto.html",[3,0.24,4,0.203,5,0.203,7,0.362,11,0.038,12,0.993,15,0.989,16,0.319,23,0.24,24,0.072,29,0.021,30,0.021,73,1.105,87,1.212,126,1.253,138,3.264,140,1.666,141,2.484,142,2.484,143,2.746,144,2.746,146,3.264,147,3.264,148,3.392,149,2.085,150,2.746,152,2.746,153,2.085,159,2.372,161,2.085,162,3.071,169,2.085,170,2.085,171,2.085,204,2.372,231,3.629,233,3.629,237,1.86,239,3.629,258,3.629,259,3.629,261,3.629,262,3.124,263,3.629,270,1.86,278,1.86,289,2.756,292,2.756,293,2.756,294,2.756,295,2.756,296,2.756,315,2.829,317,1.856,336,4.2,337,1.86,338,3.976,339,3.976,340,3.976,341,3.976,342,2.253,343,4.397,344,4.917,345,2.253,346,2.253,347,3.338,348,2.253,349,3.338,350,3.338,351,4.397,352,3.338,353,3.338,354,2.253,355,2.253,356,2.756,357,3.338,358,2.253]],["title/modules/OrderForLunchModule.html",[31,1.009,40,1.675]],["body/modules/OrderForLunchModule.html",[2,1.432,3,0.395,4,0.335,5,0.335,11,0.038,16,0.77,17,0.596,23,0.395,24,0.119,29,0.029,30,0.029,31,1.578,33,1.512,34,1.918,40,3.279,42,2.349,43,1.852,44,1.852,46,2.618,57,3.345,58,2.064,174,1.581,177,1.512,314,3.23,315,2.064,326,2.862,327,3.063,359,3.063,360,3.063,361,3.711,362,3.711]],["title/injectables/OrderForLunchService.html",[60,0.751,326,1.503]],["body/injectables/OrderForLunchService.html",[3,0.264,4,0.224,5,0.224,7,0.398,8,1.088,11,0.038,12,1.027,14,1.483,15,1.229,16,0.595,17,0.398,23,0.264,24,0.079,25,0.915,27,1.635,29,0.022,30,0.022,58,2.915,60,0.892,61,1.115,73,1.097,74,1.89,75,1.874,76,1.457,77,1.457,80,1.61,84,1.802,85,1.483,86,1.635,87,1.401,90,1.457,93,2.071,94,1.457,104,1.009,137,1.785,174,1.268,177,1.009,179,3.235,180,1.99,181,1.547,182,1.547,185,3.047,189,1.99,191,2.873,192,1.547,194,2.713,196,2.235,199,1.547,315,2.915,317,2.915,324,2.045,325,2.045,326,1.785,363,2.045,364,2.477,365,2.477,366,2.477,367,2.477,368,2.477,369,2.477,370,3.578,371,2.477,372,2.477,373,2.477,374,2.477,375,2.477]],["title/injectables/PrismaService.html",[60,0.751,174,0.83]],["body/injectables/PrismaService.html",[3,0.382,4,0.324,5,0.324,7,0.576,8,1.401,11,0.038,12,0.931,14,1.401,16,0.653,17,0.576,23,0.382,24,0.115,29,0.028,30,0.028,60,1.149,61,1.616,73,0.807,84,1.326,85,1.091,86,1.203,174,1.27,179,3.216,194,2.563,376,2.963,377,4.609,378,5.092,379,4.609,380,5.687,381,4.609,382,5.373,383,3.59,384,2.963,385,3.59,386,2.963,387,3.59,388,3.59,389,3.59,390,3.59]],["title/controllers/UserController.html",[0,0.916,391,1.881]],["body/controllers/UserController.html",[0,0.762,2,0.762,3,0.267,4,0.226,5,0.226,7,0.402,8,1.097,10,2.838,11,0.038,12,1.031,14,1.552,15,1.28,16,0.694,17,0.402,19,1.393,20,1.25,23,0.267,24,0.08,25,0.925,26,1.393,27,1.71,29,0.022,30,0.022,72,1.565,73,1.102,75,1.884,76,1.469,77,1.469,78,2.253,79,2.563,82,2.253,84,1.81,85,1.49,86,1.642,87,1.534,88,2.253,90,1.021,91,2.253,93,2.193,94,1.021,95,2.253,97,1.565,98,2.253,100,1.78,101,2.253,103,2.64,104,1.021,105,1.565,106,1.565,107,1.565,108,1.565,109,1.565,119,1.565,121,1.565,123,1.78,124,1.565,391,2.253,392,2.068,393,2.506,394,3.608,395,2.506,396,3.095,397,2.506,398,2.506,399,2.506,400,2.506,401,2.506,402,2.506,403,2.506,404,2.109,405,2.068,406,2.506,407,2.506,408,2.506,409,2.506,410,2.506,411,2.506,412,3.608,413,2.506]],["title/classes/UserDTO.html",[24,0.096,396,1.675]],["body/classes/UserDTO.html",[3,0.239,4,0.203,5,0.203,7,0.36,11,0.038,12,1.027,15,1.173,23,0.239,24,0.072,29,0.02,30,0.02,73,1.143,86,1.471,87,1.209,126,1.248,129,1.248,130,1.852,131,1.852,132,1.852,133,3.275,134,1.852,135,1.852,136,1.852,137,1.12,138,3.33,140,1.661,141,2.478,142,2.478,143,2.741,144,2.741,146,2.741,147,2.741,148,3.066,149,2.079,150,3.066,152,3.26,153,3.066,154,2.747,155,3.118,156,3.118,161,2.079,162,3.174,167,2.747,169,2.079,170,2.079,171,2.079,236,2.747,253,2.747,262,2.365,356,3.275,396,1.851,414,1.852,415,3.967,416,3.967,417,3.967,418,3.967,419,3.967,420,2.244,421,2.244,422,2.244,423,3.328,424,3.328,425,3.328,426,3.328,427,3.328,428,3.328,429,3.328,430,3.328,431,3.328,432,2.244,433,3.328,434,3.328,435,3.328,436,3.328,437,3.328,438,2.244,439,3.328,440,2.244,441,3.328,442,3.328,443,3.328,444,3.328,445,3.328,446,3.328,447,2.244,448,2.244,449,2.244,450,2.244,451,2.244,452,2.244]],["title/modules/UserModule.html",[31,1.009,41,1.675]],["body/modules/UserModule.html",[2,1.444,3,0.401,4,0.34,5,0.34,11,0.038,16,0.774,17,0.604,23,0.401,24,0.12,29,0.029,30,0.029,31,1.592,33,1.532,34,1.935,41,3.288,42,2.37,43,1.877,44,1.877,46,2.641,174,1.586,177,1.532,391,3.251,404,2.872,405,3.106,453,3.106,454,3.106,455,3.762,456,3.762]],["title/injectables/UserService.html",[60,0.751,404,1.503]],["body/injectables/UserService.html",[3,0.276,4,0.234,5,0.234,7,0.416,8,1.123,11,0.038,12,1.043,14,1.509,15,1.242,16,0.61,17,0.416,23,0.276,24,0.083,25,0.956,27,1.663,29,0.023,30,0.023,60,0.92,61,1.165,73,1.116,74,1.937,75,1.912,76,1.504,77,1.504,80,1.662,84,1.833,85,1.509,86,1.663,87,1.422,90,1.504,93,2.102,94,1.504,104,1.054,137,1.843,174,1.293,177,1.054,179,3.257,180,2.053,181,1.617,182,1.617,185,3.1,189,2.053,191,2.932,192,1.617,194,2.76,196,2.307,199,1.617,396,2.953,404,1.843,457,2.137,458,2.589,459,2.589,460,2.589,461,2.589,462,2.589,463,2.589,464,2.589,465,3.693,466,2.589,467,2.589,468,2.589,469,2.589,470,2.589]],["title/coverage.html",[471,2.916]],["body/coverage.html",[0,1.597,1,1.889,5,0.273,6,2.497,11,0.037,21,1.509,24,0.16,29,0.025,30,0.025,51,2.704,52,2.289,54,2.704,55,2.289,58,2.289,60,1.351,62,2.497,69,1.889,70,2.001,71,2.497,73,0.68,81,1.682,112,1.509,127,2.149,128,2.497,174,0.833,178,2.497,202,1.889,203,2.497,205,1.682,213,1.509,221,2.149,222,2.497,301,2.497,314,1.889,315,2.602,316,2.497,317,1.682,326,1.509,336,2.497,337,2.497,363,2.497,376,2.497,391,1.889,392,2.497,396,1.682,404,1.509,414,2.497,457,2.497,471,2.149,472,3.025,473,3.025,474,3.025,475,5.885,476,4.116,477,3.025,478,4.116,479,3.025,480,5.643,481,3.025,482,3.025,483,2.497,484,3.025,485,2.497,486,3.025,487,3.025,488,3.025,489,3.025,490,3.025,491,3.025,492,3.025]],["title/dependencies.html",[34,1.475,493,2.079]],["body/dependencies.html",[11,0.038,17,0.676,20,2.101,29,0.031,30,0.031,34,1.715,386,3.476,494,5.473,495,4.21,496,4.21,497,4.21,498,4.21,499,5.092,500,4.21,501,4.21,502,4.21,503,4.21,504,4.21,505,4.21,506,4.21,507,4.21,508,4.21,509,4.21]],["title/miscellaneous/functions.html",[510,2.079,511,2.989]],["body/miscellaneous/functions.html",[7,0.748,11,0.033,29,0.033,30,0.033,483,3.845,485,4.714,510,3.845,511,3.845,512,4.658]],["title/index.html",[7,0.404,513,2.518,514,2.518]],["body/index.html",[4,0.31,11,0.037,29,0.028,30,0.028,129,1.908,384,2.833,471,2.439,515,3.432,516,3.432,517,4.478,518,3.432,519,3.432,520,3.432,521,3.432,522,3.432,523,3.432,524,4.984,525,3.432,526,3.432,527,3.432,528,3.432,529,5.723,530,3.432,531,3.432,532,5.618,533,3.432,534,3.432,535,4.478,536,3.432,537,3.432,538,3.432,539,3.432,540,4.478,541,4.478,542,3.432,543,3.432,544,3.432,545,4.478,546,4.478,547,3.432,548,3.432,549,3.432,550,3.432,551,3.432,552,2.833,553,3.432,554,3.432,555,3.432,556,3.432,557,3.432,558,3.432,559,3.432,560,3.432,561,3.432,562,3.432,563,2.833,564,3.432,565,3.432,566,3.432,567,3.432,568,3.432,569,3.432,570,2.833]],["title/modules.html",[33,1.672]],["body/modules.html",[11,0.032,29,0.032,30,0.032,32,2.703,33,1.762,38,2.406,39,2.406,40,2.406,41,2.406,552,4.842,571,5.866,572,5.866,573,5.866]],["title/overview.html",[574,3.388]],["body/overview.html",[2,1.018,11,0.037,21,2.457,29,0.027,30,0.027,32,3.735,33,1.364,34,1.794,35,2.764,36,2.764,37,2.764,38,3.163,39,3.163,40,3.163,41,3.163,42,2.198,43,1.671,44,1.671,61,1.507,112,2.457,126,1.862,172,2.764,173,2.764,174,1.538,213,2.457,297,2.764,298,2.764,326,2.457,359,2.764,360,2.764,404,2.457,453,2.764,454,2.764,574,2.764,575,4.406,576,3.348,577,3.348]],["title/properties.html",[140,1.807,493,2.079]],["body/properties.html",[11,0.037,29,0.033,30,0.033,129,2.558,140,2.295,563,3.797,570,3.797,578,4.599,579,4.599,580,4.599]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":579,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":170,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["04",{"_index":429,"title":{},"body":{"classes/UserDTO.html":{}}}],["07t22:54:19.505z",{"_index":171,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["1",{"_index":270,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["10",{"_index":271,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["100",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["123.23",{"_index":358,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["1234",{"_index":448,"title":{},"body":{"classes/UserDTO.html":{}}}],["13/14",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":169,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["350.55",{"_index":283,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["4",{"_index":577,"title":{},"body":{"overview.html":{}}}],["4.6.0",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["4150.55",{"_index":282,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["4b72",{"_index":294,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["5",{"_index":575,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["508b",{"_index":293,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["6",{"_index":576,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["6e8b3efacbcd",{"_index":296,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["7.2.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["8f40",{"_index":295,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["9.0.0",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["92",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["a6584e78",{"_index":292,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["adduser",{"_index":394,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(@body",{"_index":408,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(data",{"_index":395,"title":{},"body":{"controllers/UserController.html":{}}}],["afins",{"_index":166,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["alteração",{"_index":161,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["amazing",{"_index":553,"title":{},"body":{"index.html":{}}}],["amount",{"_index":338,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["apenas",{"_index":156,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/UserDTO.html":{}}}],["apiexcludecontroller",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["apitags('lunchboxtype",{"_index":114,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["apitags('lunchmealmenu",{"_index":215,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["apitags('orderforlunchdto",{"_index":328,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["apitags('users",{"_index":406,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":384,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":390,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":523,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["armazena",{"_index":146,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["armazenar",{"_index":250,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["async",{"_index":179,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["ativo",{"_index":436,"title":{},"body":{"classes/UserDTO.html":{}}}],["atributo",{"_index":424,"title":{},"body":{"classes/UserDTO.html":{}}}],["author",{"_index":563,"title":{},"body":{"index.html":{},"properties.html":{}}}],["automaticamente",{"_index":147,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["avaliação",{"_index":269,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["averagecalories",{"_index":223,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["averageprice",{"_index":224,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["averageweight",{"_index":225,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["await",{"_index":194,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":554,"title":{},"body":{"index.html":{}}}],["baseado",{"_index":425,"title":{},"body":{"classes/UserDTO.html":{}}}],["body",{"_index":103,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["bolonhesa",{"_index":280,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["boolean",{"_index":431,"title":{},"body":{"classes/UserDTO.html":{}}}],["bootstrap",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"coverage.html":{}}}],["browse",{"_index":573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":571,"title":{},"body":{"modules.html":{}}}],["building",{"_index":518,"title":{},"body":{"index.html":{}}}],["calorias",{"_index":234,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["cassems",{"_index":427,"title":{},"body":{"classes/UserDTO.html":{}}}],["class",{"_index":24,"title":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":126,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_lunchboxtypemodule",{"_index":172,"title":{},"body":{"modules/LunchBoxTypeModule.html":{},"overview.html":{}}}],["cluster_lunchboxtypemodule_providers",{"_index":173,"title":{},"body":{"modules/LunchBoxTypeModule.html":{},"overview.html":{}}}],["cluster_lunchmealmenumodule",{"_index":297,"title":{},"body":{"modules/LunchMealMenuModule.html":{},"overview.html":{}}}],["cluster_lunchmealmenumodule_providers",{"_index":298,"title":{},"body":{"modules/LunchMealMenuModule.html":{},"overview.html":{}}}],["cluster_orderforlunchmodule",{"_index":359,"title":{},"body":{"modules/OrderForLunchModule.html":{},"overview.html":{}}}],["cluster_orderforlunchmodule_providers",{"_index":360,"title":{},"body":{"modules/OrderForLunchModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":453,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":454,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["completo",{"_index":439,"title":{},"body":{"classes/UserDTO.html":{}}}],["const",{"_index":192,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":181,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":182,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('lunch",{"_index":115,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{}}}],["controller('order",{"_index":329,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["controller('user",{"_index":407,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":471,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":74,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":116,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{}}}],["create(data",{"_index":80,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["createdat",{"_index":141,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["criada",{"_index":443,"title":{},"body":{"classes/UserDTO.html":{}}}],["criação",{"_index":149,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["código",{"_index":444,"title":{},"body":{"classes/UserDTO.html":{}}}],["da",{"_index":159,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["data",{"_index":87,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["date",{"_index":143,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["de",{"_index":148,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["decimal",{"_index":237,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":104,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":95,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":129,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/UserDTO.html":{},"index.html":{},"properties.html":{}}}],["descritivo",{"_index":288,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["descrição",{"_index":246,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["descrições",{"_index":165,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["dessertname",{"_index":226,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["development",{"_index":531,"title":{},"body":{"index.html":{}}}],["dia",{"_index":266,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["digitos",{"_index":430,"title":{},"body":{"classes/UserDTO.html":{}}}],["documentation",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":130,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["dto/lunch",{"_index":110,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{}}}],["dto/order",{"_index":324,"title":{},"body":{"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{}}}],["dto/user.dto",{"_index":403,"title":{},"body":{"controllers/UserController.html":{}}}],["e2e",{"_index":542,"title":{},"body":{"index.html":{}}}],["edit",{"_index":199,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["efficient",{"_index":519,"title":{},"body":{"index.html":{}}}],["em",{"_index":235,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["empregado",{"_index":426,"title":{},"body":{"classes/UserDTO.html":{}}}],["enableshutdownhooks",{"_index":379,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":381,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entidade",{"_index":135,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["específico",{"_index":290,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["esse",{"_index":423,"title":{},"body":{"classes/UserDTO.html":{}}}],["est",{"_index":435,"title":{},"body":{"classes/UserDTO.html":{}}}],["example",{"_index":162,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["express",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":377,"title":{},"body":{"injectables/PrismaService.html":{}}}],["feira",{"_index":286,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["find",{"_index":196,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":75,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":76,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":119,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":90,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":415,"title":{},"body":{"classes/UserDTO.html":{}}}],["fit_ou_normal",{"_index":281,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["fk",{"_index":258,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["framework",{"_index":517,"title":{},"body":{"index.html":{}}}],["fulano",{"_index":449,"title":{},"body":{"classes/UserDTO.html":{}}}],["full",{"_index":131,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["function",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":511,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gelatina",{"_index":284,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["gerada",{"_index":261,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["geralmente",{"_index":428,"title":{},"body":{"classes/UserDTO.html":{}}}],["get('/listall",{"_index":88,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["get(':id",{"_index":91,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":513,"title":{"index.html":{}},"body":{}}],["grow",{"_index":549,"title":{},"body":{"index.html":{}}}],["hashcode",{"_index":445,"title":{},"body":{"classes/UserDTO.html":{}}}],["hello",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":560,"title":{},"body":{"index.html":{}}}],["hospedagem",{"_index":255,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["http://umdominio.com/app/img/menuprint.jpg",{"_index":291,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["https://nestjs.com",{"_index":567,"title":{},"body":{"index.html":{}}}],["id",{"_index":93,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["idcompanyemployee",{"_index":416,"title":{},"body":{"classes/UserDTO.html":{}}}],["identificar",{"_index":433,"title":{},"body":{"classes/UserDTO.html":{}}}],["identifier",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["imagelinkpath",{"_index":227,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["imagem",{"_index":252,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["img",{"_index":256,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["implements",{"_index":387,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":382,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":60,"title":{"injectables/AppService.html":{},"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":528,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":530,"title":{},"body":{"index.html":{}}}],["isactive",{"_index":417,"title":{},"body":{"classes/UserDTO.html":{}}}],["itens",{"_index":343,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["join",{"_index":556,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":564,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":418,"title":{},"body":{"classes/UserDTO.html":{}}}],["license",{"_index":570,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":546,"title":{},"body":{"index.html":{}}}],["lunch",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"controllers/OrderForLunchController.html":{}}}],["lunch.controller",{"_index":362,"title":{},"body":{"modules/OrderForLunchModule.html":{}}}],["lunch.controller.ts",{"_index":316,"title":{},"body":{"controllers/OrderForLunchController.html":{},"coverage.html":{}}}],["lunch.controller.ts:13",{"_index":318,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.controller.ts:18",{"_index":319,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.controller.ts:23",{"_index":320,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.controller.ts:28",{"_index":323,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.controller.ts:33",{"_index":322,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.controller.ts:38",{"_index":321,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["lunch.dto",{"_index":325,"title":{},"body":{"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{}}}],["lunch.dto.ts",{"_index":337,"title":{},"body":{"classes/OrderForLunchDto.html":{},"coverage.html":{}}}],["lunch.dto.ts:12",{"_index":348,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.dto.ts:18",{"_index":342,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.dto.ts:24",{"_index":345,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.dto.ts:30",{"_index":354,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.dto.ts:36",{"_index":346,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.dto.ts:42",{"_index":355,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunch.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["lunch.module.ts",{"_index":361,"title":{},"body":{"modules/OrderForLunchModule.html":{}}}],["lunch.service",{"_index":327,"title":{},"body":{"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{}}}],["lunch.service.ts",{"_index":363,"title":{},"body":{"injectables/OrderForLunchService.html":{},"coverage.html":{}}}],["lunch.service.ts:11",{"_index":365,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch.service.ts:19",{"_index":366,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch.service.ts:24",{"_index":367,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch.service.ts:33",{"_index":369,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch.service.ts:43",{"_index":368,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch.service.ts:6",{"_index":364,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["lunch/dto/order",{"_index":336,"title":{},"body":{"classes/OrderForLunchDto.html":{},"coverage.html":{}}}],["lunch/order",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"coverage.html":{}}}],["lunchbox",{"_index":260,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["lunchboxid",{"_index":228,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["lunchboxtypecontroller",{"_index":69,"title":{"controllers/LunchBoxTypeController.html":{}},"body":{"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"coverage.html":{}}}],["lunchboxtypedto",{"_index":81,"title":{"classes/LunchBoxTypeDto.html":{}},"body":{"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"coverage.html":{}}}],["lunchboxtypemodule",{"_index":38,"title":{"modules/LunchBoxTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["lunchboxtypeservice",{"_index":112,"title":{"injectables/LunchBoxTypeService.html":{}},"body":{"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["lunchmealid",{"_index":339,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunchmealmenu",{"_index":347,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["lunchmealmenucontroller",{"_index":202,"title":{"controllers/LunchMealMenuController.html":{}},"body":{"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"coverage.html":{}}}],["lunchmealmenudto",{"_index":205,"title":{"classes/LunchMealMenuDto.html":{}},"body":{"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["lunchmealmenumodule",{"_index":39,"title":{"modules/LunchMealMenuModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LunchMealMenuModule.html":{},"modules.html":{},"overview.html":{}}}],["lunchmealmenuservice",{"_index":213,"title":{"injectables/LunchMealMenuService.html":{}},"body":{"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{},"overview.html":{}}}],["macarrão",{"_index":279,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["marmita",{"_index":139,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["meal",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["menu",{"_index":204,"title":{},"body":{"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["menu.controller",{"_index":300,"title":{},"body":{"modules/LunchMealMenuModule.html":{}}}],["menu.controller.ts",{"_index":203,"title":{},"body":{"controllers/LunchMealMenuController.html":{},"coverage.html":{}}}],["menu.controller.ts:13",{"_index":206,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.controller.ts:18",{"_index":207,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.controller.ts:23",{"_index":208,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.controller.ts:28",{"_index":210,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.controller.ts:33",{"_index":211,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.controller.ts:38",{"_index":209,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["menu.dto",{"_index":212,"title":{},"body":{"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{}}}],["menu.dto.ts",{"_index":222,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"coverage.html":{}}}],["menu.dto.ts:11",{"_index":264,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:17",{"_index":272,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:23",{"_index":232,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:29",{"_index":241,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:35",{"_index":238,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:41",{"_index":247,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:47",{"_index":265,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:53",{"_index":245,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:59",{"_index":268,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:65",{"_index":249,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:71",{"_index":244,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:77",{"_index":277,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.dto.ts:83",{"_index":257,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["menu.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.module.ts",{"_index":299,"title":{},"body":{"modules/LunchMealMenuModule.html":{}}}],["menu.service",{"_index":214,"title":{},"body":{"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{}}}],["menu.service.ts",{"_index":301,"title":{},"body":{"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["menu.service.ts:11",{"_index":303,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu.service.ts:19",{"_index":304,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu.service.ts:24",{"_index":305,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu.service.ts:33",{"_index":307,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu.service.ts:43",{"_index":306,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu.service.ts:6",{"_index":302,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["menu/dto/lunch",{"_index":221,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["menu/lunch",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["metadata",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":510,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":545,"title":{},"body":{"index.html":{}}}],["mode",{"_index":535,"title":{},"body":{"index.html":{}}}],["model",{"_index":136,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":559,"title":{},"body":{"index.html":{}}}],["multiplicação",{"_index":352,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["myśliwiec",{"_index":565,"title":{},"body":{"index.html":{}}}],["médio",{"_index":240,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["namedayweek",{"_index":229,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["nest",{"_index":524,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":569,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":109,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["nestjs/core",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":516,"title":{},"body":{"index.html":{}}}],["nome",{"_index":155,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/UserDTO.html":{}}}],["normal",{"_index":163,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["npm",{"_index":529,"title":{},"body":{"index.html":{}}}],["null",{"_index":144,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["num",{"_index":353,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["number",{"_index":231,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["não",{"_index":437,"title":{},"body":{"classes/UserDTO.html":{}}}],["número",{"_index":236,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/UserDTO.html":{}}}],["o",{"_index":153,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["obtido",{"_index":350,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["one",{"_index":191,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":380,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":547,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["order",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{}}}],["orderforlunchcontroller",{"_index":314,"title":{"controllers/OrderForLunchController.html":{}},"body":{"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{},"coverage.html":{}}}],["orderforlunchdto",{"_index":317,"title":{"classes/OrderForLunchDto.html":{}},"body":{"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"coverage.html":{}}}],["orderforlunchmodule",{"_index":40,"title":{"modules/OrderForLunchModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderForLunchModule.html":{},"modules.html":{},"overview.html":{}}}],["orderforlunchservice",{"_index":326,"title":{"injectables/OrderForLunchService.html":{}},"body":{"controllers/OrderForLunchController.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"coverage.html":{},"overview.html":{}}}],["ordervalue",{"_index":340,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["ou",{"_index":253,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/UserDTO.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":493,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padrão",{"_index":132,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["para",{"_index":138,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["param",{"_index":105,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":419,"title":{},"body":{"classes/UserDTO.html":{}}}],["patch",{"_index":106,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":101,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["path",{"_index":254,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["pedido",{"_index":344,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["pela",{"_index":351,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["pertence",{"_index":276,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["peso",{"_index":242,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["please",{"_index":557,"title":{},"body":{"index.html":{}}}],["porção",{"_index":243,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["post('/add",{"_index":82,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["preço",{"_index":239,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["primeiro",{"_index":154,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["prisma",{"_index":137,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["prisma/client",{"_index":386,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/client/runtime",{"_index":278,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["prismaclient",{"_index":378,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":174,"title":{"injectables/PrismaService.html":{}},"body":{"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":537,"title":{},"body":{"index.html":{}}}],["produto",{"_index":168,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["progressive",{"_index":515,"title":{},"body":{"index.html":{}}}],["project",{"_index":548,"title":{},"body":{"index.html":{}}}],["properties",{"_index":140,"title":{"properties.html":{}},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{},"properties.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{}}}],["put",{"_index":108,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":98,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["qual",{"_index":275,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["quando",{"_index":434,"title":{},"body":{"classes/UserDTO.html":{}}}],["quantidade",{"_index":233,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["que",{"_index":133,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["ratequalitynumber",{"_index":230,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["read",{"_index":558,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["refeição",{"_index":274,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["reflect",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["registro",{"_index":150,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["relacionamento",{"_index":259,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["remove",{"_index":77,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":124,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":94,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":527,"title":{},"body":{"index.html":{}}}],["representa",{"_index":134,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["reservado",{"_index":152,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["root",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":532,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":520,"title":{},"body":{"index.html":{}}}],["semana",{"_index":267,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["senha",{"_index":441,"title":{},"body":{"classes/UserDTO.html":{}}}],["ser",{"_index":442,"title":{},"body":{"classes/UserDTO.html":{}}}],["server",{"_index":521,"title":{},"body":{"index.html":{}}}],["service/controller",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["sexta",{"_index":285,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["side",{"_index":522,"title":{},"body":{"index.html":{}}}],["silva",{"_index":450,"title":{},"body":{"classes/UserDTO.html":{}}}],["simples",{"_index":164,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{}}}],["sobre",{"_index":167,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/UserDTO.html":{}}}],["sobremesa",{"_index":248,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["solicitante",{"_index":357,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":551,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["src/database/prisma.service",{"_index":177,"title":{},"body":{"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/database/prisma.service.ts",{"_index":376,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/database/prisma.service.ts:10",{"_index":383,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/database/prisma.service.ts:6",{"_index":385,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/lunch",{"_index":70,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"modules/LunchMealMenuModule.html":{},"injectables/LunchMealMenuService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":483,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order",{"_index":315,"title":{},"body":{"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"modules/OrderForLunchModule.html":{},"injectables/OrderForLunchService.html":{},"coverage.html":{}}}],["src/user/dto/user.dto",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/dto/user.dto.ts",{"_index":414,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:15",{"_index":421,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":438,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:27",{"_index":440,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:33",{"_index":432,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:39",{"_index":420,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:45",{"_index":447,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/dto/user.dto.ts:9",{"_index":422,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/user.controller.ts",{"_index":392,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:13",{"_index":397,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:18",{"_index":398,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:23",{"_index":399,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":401,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":402,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":400,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":455,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":457,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:19",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:43",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":533,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":536,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":538,"title":{},"body":{"index.html":{}}}],["started",{"_index":514,"title":{"index.html":{}},"body":{}}],["starter",{"_index":526,"title":{},"body":{"index.html":{}}}],["statements",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":561,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["support",{"_index":552,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":572,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":541,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":544,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":543,"title":{},"body":{"index.html":{}}}],["tests",{"_index":540,"title":{},"body":{"index.html":{}}}],["texto",{"_index":287,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["thanks",{"_index":550,"title":{},"body":{"index.html":{}}}],["thebox",{"_index":193,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["themenu",{"_index":308,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["theorder",{"_index":370,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["theuser",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["this.$connect",{"_index":388,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":389,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.lunchboxtypeservice.create(data",{"_index":117,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["this.lunchboxtypeservice.findall",{"_index":118,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["this.lunchboxtypeservice.findone(id",{"_index":120,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["this.lunchboxtypeservice.remove(id",{"_index":125,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["this.lunchboxtypeservice.update(id",{"_index":122,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["this.lunchmealmenuservice.create(data",{"_index":216,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["this.lunchmealmenuservice.findall",{"_index":217,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["this.lunchmealmenuservice.findone(id",{"_index":218,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["this.lunchmealmenuservice.remove(id",{"_index":220,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["this.lunchmealmenuservice.update(id",{"_index":219,"title":{},"body":{"controllers/LunchMealMenuController.html":{}}}],["this.orderforlunchservice.create(data",{"_index":330,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["this.orderforlunchservice.findall",{"_index":331,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["this.orderforlunchservice.findone(id",{"_index":332,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["this.orderforlunchservice.remove(id",{"_index":335,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["this.orderforlunchservice.update(id",{"_index":333,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["this.prisma.lunchboxtype.create",{"_index":195,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["this.prisma.lunchboxtype.delete",{"_index":201,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["this.prisma.lunchboxtype.findmany",{"_index":197,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["this.prisma.lunchboxtype.findunique",{"_index":198,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["this.prisma.lunchboxtype.update",{"_index":200,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["this.prisma.lunchmealmenu.create",{"_index":309,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["this.prisma.lunchmealmenu.delete",{"_index":313,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["this.prisma.lunchmealmenu.findmany",{"_index":310,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["this.prisma.lunchmealmenu.findunique",{"_index":311,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["this.prisma.lunchmealmenu.update",{"_index":312,"title":{},"body":{"injectables/LunchMealMenuService.html":{}}}],["this.prisma.orderforlunch.create",{"_index":371,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["this.prisma.orderforlunch.delete",{"_index":375,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["this.prisma.orderforlunch.findmany",{"_index":372,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["this.prisma.orderforlunch.findunique",{"_index":373,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["this.prisma.orderforlunch.update",{"_index":374,"title":{},"body":{"injectables/OrderForLunchService.html":{}}}],["this.prisma.user.create",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":470,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":468,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":469,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(data",{"_index":409,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":410,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":411,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":413,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":412,"title":{},"body":{"controllers/UserController.html":{}}}],["tipo",{"_index":273,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["touch",{"_index":562,"title":{},"body":{"index.html":{}}}],["true",{"_index":452,"title":{},"body":{"classes/UserDTO.html":{}}}],["twitter",{"_index":568,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"controllers/LunchMealMenuController.html":{},"classes/LunchMealMenuDto.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"classes/OrderForLunchDto.html":{},"injectables/OrderForLunchService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type.controller",{"_index":176,"title":{},"body":{"modules/LunchBoxTypeModule.html":{}}}],["type.controller.ts",{"_index":71,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"coverage.html":{}}}],["type.controller.ts:13",{"_index":83,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.controller.ts:18",{"_index":89,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.controller.ts:23",{"_index":92,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.controller.ts:28",{"_index":99,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.controller.ts:33",{"_index":102,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.controller.ts:38",{"_index":96,"title":{},"body":{"controllers/LunchBoxTypeController.html":{}}}],["type.dto",{"_index":111,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"injectables/LunchBoxTypeService.html":{}}}],["type.dto.ts",{"_index":128,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:15",{"_index":151,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["type.dto.ts:21",{"_index":145,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["type.dto.ts:27",{"_index":160,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["type.dto.ts:9",{"_index":157,"title":{},"body":{"classes/LunchBoxTypeDto.html":{}}}],["type.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["type.module.ts",{"_index":175,"title":{},"body":{"modules/LunchBoxTypeModule.html":{}}}],["type.service",{"_index":113,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{}}}],["type.service.ts",{"_index":178,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"coverage.html":{}}}],["type.service.ts:11",{"_index":184,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type.service.ts:19",{"_index":186,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type.service.ts:24",{"_index":187,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type.service.ts:33",{"_index":190,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type.service.ts:43",{"_index":188,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type.service.ts:6",{"_index":183,"title":{},"body":{"injectables/LunchBoxTypeService.html":{}}}],["type/dto/lunch",{"_index":127,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"injectables/LunchBoxTypeService.html":{},"coverage.html":{}}}],["type/lunch",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/LunchBoxTypeController.html":{},"modules/LunchBoxTypeModule.html":{},"injectables/LunchBoxTypeService.html":{},"coverage.html":{}}}],["types",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":525,"title":{},"body":{"index.html":{}}}],["título",{"_index":158,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{}}}],["ui",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":289,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["unit",{"_index":539,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":185,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":580,"title":{},"body":{"properties.html":{}}}],["update",{"_index":180,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":334,"title":{},"body":{"controllers/OrderForLunchController.html":{}}}],["update(id",{"_index":189,"title":{},"body":{"injectables/LunchBoxTypeService.html":{},"injectables/LunchMealMenuService.html":{},"controllers/OrderForLunchController.html":{},"injectables/OrderForLunchService.html":{},"injectables/UserService.html":{}}}],["updateallattributes",{"_index":78,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["updateallattributes(@param('id",{"_index":121,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["updateallattributes(id",{"_index":97,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/OrderForLunchController.html":{},"controllers/UserController.html":{}}}],["updatedat",{"_index":142,"title":{},"body":{"classes/LunchBoxTypeDto.html":{},"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["updatepartialattributes",{"_index":79,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/UserController.html":{}}}],["updatepartialattributes(@param('id",{"_index":123,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/UserController.html":{}}}],["updatepartialattributes(id",{"_index":100,"title":{},"body":{"controllers/LunchBoxTypeController.html":{},"controllers/LunchMealMenuController.html":{},"controllers/UserController.html":{}}}],["url",{"_index":251,"title":{},"body":{"classes/LunchMealMenuDto.html":{}}}],["user",{"_index":393,"title":{},"body":{"controllers/UserController.html":{}}}],["user.controller",{"_index":456,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":405,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":391,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":396,"title":{"classes/UserDTO.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":41,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["useroderid",{"_index":341,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["userservice",{"_index":404,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":356,"title":{},"body":{"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["uuid",{"_index":263,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{}}}],["valor",{"_index":349,"title":{},"body":{"classes/OrderForLunchDto.html":{}}}],["version",{"_index":578,"title":{},"body":{"properties.html":{}}}],["via",{"_index":262,"title":{},"body":{"classes/LunchMealMenuDto.html":{},"classes/OrderForLunchDto.html":{},"classes/UserDTO.html":{}}}],["watch",{"_index":534,"title":{},"body":{"index.html":{}}}],["website",{"_index":566,"title":{},"body":{"index.html":{}}}],["word",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["xpto",{"_index":446,"title":{},"body":{"classes/UserDTO.html":{}}}],["xxxxxxxxxxxxxxxx",{"_index":451,"title":{},"body":{"classes/UserDTO.html":{}}}],["you'd",{"_index":555,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/LunchBoxTypeModule.html":{},"modules/LunchMealMenuModule.html":{},"modules/OrderForLunchModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { ApiExcludeController, ApiTags } from \"@nestjs/swagger\";\nimport { AppService } from \"./app.service\";\n\n@ApiExcludeController()\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n      return this.appService.getHello();\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nLunchBoxTypeModule\n\nLunchBoxTypeModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLunchBoxTypeModule->AppModule\n\n\n\n\n\nLunchMealMenuModule\n\nLunchMealMenuModule\n\nAppModule -->\n\nLunchMealMenuModule->AppModule\n\n\n\n\n\nOrderForLunchModule\n\nOrderForLunchModule\n\nAppModule -->\n\nOrderForLunchModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LunchBoxTypeModule\n                        \n                        \n                            LunchMealMenuModule\n                        \n                        \n                            OrderForLunchModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { LunchBoxTypeModule } from './lunch-box-type/lunch-box-type.module';\nimport { LunchMealMenuModule } from './lunch-meal-menu/lunch-meal-menu.module';\nimport { OrderForLunchModule } from './order-for-lunch/order-for-lunch.module';\n\n\n@Module({\n  imports: [UserModule, LunchBoxTypeModule, LunchMealMenuModule, OrderForLunchModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello Word - Default Root Service/Controller...';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LunchBoxTypeController.html":{"url":"controllers/LunchBoxTypeController.html","title":"controller - LunchBoxTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LunchBoxTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-box-type/lunch-box-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lunch-box-type\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                updateAllAttributes\n                            \n                            \n                                updatePartialAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: LunchBoxTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LunchBoxTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listAll')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllAttributes\n                        \n                    \n                \n            \n            \n                \nupdateAllAttributes(id: string, data: LunchBoxTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchBoxTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePartialAttributes\n                        \n                    \n                \n            \n            \n                \nupdatePartialAttributes(id: string, data: LunchBoxTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchBoxTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Body, Delete, Get, Param, Patch, Post, Put } from '@nestjs/common/decorators';\nimport { ApiTags } from '@nestjs/swagger';\nimport { LunchBoxTypeDto } from './dto/lunch-box-type.dto';\nimport { LunchBoxTypeService } from './lunch-box-type.service';\n\n@ApiTags('LunchBoxType')\n@Controller('lunch-box-type')\nexport class LunchBoxTypeController {\n  constructor(private readonly lunchBoxTypeService: LunchBoxTypeService) {}\n\n  @Post('/add')\n  create(@Body() data: LunchBoxTypeDto) {\n    return this.lunchBoxTypeService.create(data);\n  }\n\n  @Get('/listAll')\n  findAll() {\n    return this.lunchBoxTypeService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.lunchBoxTypeService.findOne(id);\n  }\n\n  @Put(':id')\n  updateAllAttributes(@Param('id') id: string, @Body() data: LunchBoxTypeDto) {\n    return this.lunchBoxTypeService.update(id, data);\n  }\n\n  @Patch(':id')\n  updatePartialAttributes(@Param('id') id: string, @Body() data: LunchBoxTypeDto) {\n    return this.lunchBoxTypeService.update(id, data);\n  }\n\n  @Delete(':id')\n   remove(@Param('id') id: string) {\n    return this.lunchBoxTypeService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LunchBoxTypeDto.html":{"url":"classes/LunchBoxTypeDto.html","title":"class - LunchBoxTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LunchBoxTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-box-type/dto/lunch-box-type.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO-FULL: Padrão que representa a Entidade / Model no Prisma para a Marmita...\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-box-type/dto/lunch-box-type.dto.ts:21\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de criação do registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-box-type/dto/lunch-box-type.dto.ts:15\n                        \n                    \n\n            \n                \n                    Reservado para o primeiro nome apenas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-box-type/dto/lunch-box-type.dto.ts:9\n                        \n                    \n\n            \n                \n                    Reservado para o Nome / Título da Marmita.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-box-type/dto/lunch-box-type.dto.ts:27\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de alteração do registro.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LunchBoxTypeDto {\n    /**\n     * Reservado para o Nome / Título da Marmita.\n     * @example Marmita Normal Simples...\n     */\n    name: string\n\n    /**\n     * Reservado para o primeiro nome apenas.\n     * @example Descrições afins sobre o Produto...\n     */\n    description: string\n\n    /**\n     * Armazena automaticamente a data de criação do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    createdAt: Date | null\n\n    /**\n     * Armazena automaticamente a data de alteração do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    updatedAt: Date | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LunchBoxTypeModule.html":{"url":"modules/LunchBoxTypeModule.html","title":"module - LunchBoxTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    LunchBoxTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LunchBoxTypeModule\n\n\n\ncluster_LunchBoxTypeModule_providers\n\n\n\n\nLunchBoxTypeService\n\nLunchBoxTypeService\n\n\n\nLunchBoxTypeModule\n\nLunchBoxTypeModule\n\nLunchBoxTypeModule -->\n\nLunchBoxTypeService->LunchBoxTypeModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nLunchBoxTypeModule -->\n\nPrismaService->LunchBoxTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lunch-box-type/lunch-box-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LunchBoxTypeService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LunchBoxTypeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LunchBoxTypeService } from './lunch-box-type.service';\nimport { LunchBoxTypeController } from './lunch-box-type.controller';\nimport { PrismaService } from 'src/database/prisma.service';\n\n@Module({\n  controllers: [LunchBoxTypeController],\n  providers: [LunchBoxTypeService, PrismaService]\n})\nexport class LunchBoxTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LunchBoxTypeService.html":{"url":"injectables/LunchBoxTypeService.html","title":"injectable - LunchBoxTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LunchBoxTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-box-type/lunch-box-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/lunch-box-type/lunch-box-type.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: LunchBoxTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LunchBoxTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: LunchBoxTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-box-type/lunch-box-type.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchBoxTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/database/prisma.service';\nimport { LunchBoxTypeDto } from 'src/lunch-box-type/dto/lunch-box-type.dto'\n\n@Injectable()\nexport class LunchBoxTypeService {\n\n  constructor(private prisma: PrismaService){}\n\n  //CREATE ONE\n  async create(data: LunchBoxTypeDto) {\n    const theBox = await this.prisma.lunchBoxType.create({\n      data,\n    });\n    return theBox;\n  }\n\n  //FIND ALL\n  async findAll() {\n    return await this.prisma.lunchBoxType.findMany();\n  }\n\n  //FIND ONE\n  async findOne(id: string) {\n    return await this.prisma.lunchBoxType.findUnique({\n          where: {\n            id,\n        },\n    });\n  }\n\n  //EDIT ONE\n  async update(id: string, data: LunchBoxTypeDto) {\n    return await this.prisma.lunchBoxType.update({\n      data,\n      where: {\n          id,\n      },\n    });\n  }\n\n  //DELETE ONE\n  async remove(id: string) {\n    return await this.prisma.lunchBoxType.delete({\n          where: {\n            id,\n        },\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LunchMealMenuController.html":{"url":"controllers/LunchMealMenuController.html","title":"controller - LunchMealMenuController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LunchMealMenuController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-meal-menu/lunch-meal-menu.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lunch-meal-menu\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                updateAllAttributes\n                            \n                            \n                                updatePartialAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: LunchMealMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LunchMealMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listAll')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllAttributes\n                        \n                    \n                \n            \n            \n                \nupdateAllAttributes(id: string, data: LunchMealMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchMealMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePartialAttributes\n                        \n                    \n                \n            \n            \n                \nupdatePartialAttributes(id: string, data: LunchMealMenuDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchMealMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Get, Post, Body, Patch, Param, Delete, Put } from '@nestjs/common/decorators';\nimport { ApiTags } from '@nestjs/swagger';\nimport { LunchMealMenuDto } from './dto/lunch-meal-menu.dto';\nimport { LunchMealMenuService } from './lunch-meal-menu.service';\n\n@ApiTags('LunchMealMenu')\n@Controller('lunch-meal-menu')\nexport class LunchMealMenuController {\n  constructor(private readonly lunchMealMenuService: LunchMealMenuService) {}\n\n  @Post('/add')\n  create(@Body() data: LunchMealMenuDto) {\n    return this.lunchMealMenuService.create(data);\n  }\n\n  @Get('/listAll')\n  findAll() {\n    return this.lunchMealMenuService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.lunchMealMenuService.findOne(id);\n  }\n\n  @Put(':id')\n  updateAllAttributes(@Param('id') id: string, @Body() data: LunchMealMenuDto) {\n    return this.lunchMealMenuService.update(id, data);\n  }\n\n  @Patch(':id')\n  updatePartialAttributes(@Param('id') id: string, @Body() data: LunchMealMenuDto) {\n    return this.lunchMealMenuService.update(id, data);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.lunchMealMenuService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LunchMealMenuDto.html":{"url":"classes/LunchMealMenuDto.html","title":"class - LunchMealMenuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LunchMealMenuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                averageCalories\n                            \n                            \n                                averagePrice\n                            \n                            \n                                averageWeight\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                dessertName\n                            \n                            \n                                imageLinkPath\n                            \n                            \n                                lunchBoxId\n                            \n                            \n                                name\n                            \n                            \n                                nameDayWeek\n                            \n                            \n                                rateQualityNumber\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        averageCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:23\n                        \n                    \n\n            \n                \n                    Quantidade de Calorias do Menu.. Em Número Decimal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        averagePrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:35\n                        \n                    \n\n            \n                \n                    Preço Médio do Menu... Em Número Decimal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        averageWeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:29\n                        \n                    \n\n            \n                \n                    Peso da porção... Em Número Decimal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:71\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de criação do registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:53\n                        \n                    \n\n            \n                \n                    Reservado para a Descrição do Menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dessertName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:41\n                        \n                    \n\n            \n                \n                    Reservado para o Nome da Sobremesa Apenas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageLinkPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:65\n                        \n                    \n\n            \n                \n                    Reservado para a Armazenar a URL da Imagem ou Path de Hospedagem da IMG.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchBoxId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:83\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a FK para relacionamento da LunchBox... Gerada via UUID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:11\n                        \n                    \n\n            \n                \n                    Reservado para o Nome / Título do Menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameDayWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:47\n                        \n                    \n\n            \n                \n                    Reservado para o Nome do Dia da Semana.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rateQualityNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:59\n                        \n                    \n\n            \n                \n                    Reservado para a Armazenar a Avaliação... Em número simples... de 1 a 10...\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:17\n                        \n                    \n\n            \n                \n                    Reservado para o Tipo da Refeição a qual pertence o Menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts:77\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de alteração do registro.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime\"\n\nexport class LunchMealMenuDto {\n    /**\n     * Reservado para o Nome / Título do Menu.\n     * @example Macarrão-a-Bolonhesa\n     */\n     name: string\n\n    /**\n     * Reservado para o Tipo da Refeição a qual pertence o Menu.\n     * @example FIT_ou_NORMAL\n     */\n    type: string\n\n    /**\n     * Quantidade de Calorias do Menu.. Em Número Decimal.\n     * @example 4150.55\n     */\n    averageCalories: number\n\n    /**\n     * Peso da porção... Em Número Decimal.\n     * @example 350.55\n     */\n    averageWeight: number\n\n    /**\n     * Preço Médio do Menu... Em Número Decimal.\n     * @example 4150.55\n     */\n    averagePrice: number\n\n    /**\n     * Reservado para o Nome da Sobremesa Apenas.\n     * @example GELATINA\n     */\n    dessertName: string\n\n    /**\n     * Reservado para o Nome do Dia da Semana.\n     * @example SEXTA-FEIRA\n     */\n    nameDayWeek: string\n\n    /**\n     * Reservado para a Descrição do Menu.\n     * @example Texto-descritivo-de-um-Menu-em-específico.\n     */\n    description: string\n\n    /**\n     * Reservado para a Armazenar a Avaliação... Em número simples... de 1 a 10...\n     * @example 1\n     */\n    rateQualityNumber: number\n\n    /**\n     * Reservado para a Armazenar a URL da Imagem ou Path de Hospedagem da IMG.\n     * @example http://umdominio.com/app/img/menuprint.jpg\n     */\n    imageLinkPath: string\n\n    /**\n     * Armazena automaticamente a data de criação do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    createdAt: Date | null\n\n    /**\n     * Armazena automaticamente a data de alteração do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    updatedAt: Date | null\n\n    /**\n     * Armazena automaticamente a FK para relacionamento da LunchBox... Gerada via UUID\n     * @example a6584e78-508b-4b72-8f40-6e8b3efacbcd\n     */\n    lunchBoxId: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LunchMealMenuModule.html":{"url":"modules/LunchMealMenuModule.html","title":"module - LunchMealMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    LunchMealMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LunchMealMenuModule\n\n\n\ncluster_LunchMealMenuModule_providers\n\n\n\n\nLunchMealMenuService\n\nLunchMealMenuService\n\n\n\nLunchMealMenuModule\n\nLunchMealMenuModule\n\nLunchMealMenuModule -->\n\nLunchMealMenuService->LunchMealMenuModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nLunchMealMenuModule -->\n\nPrismaService->LunchMealMenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lunch-meal-menu/lunch-meal-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LunchMealMenuService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LunchMealMenuController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LunchMealMenuService } from './lunch-meal-menu.service';\nimport { LunchMealMenuController } from './lunch-meal-menu.controller';\nimport { PrismaService } from 'src/database/prisma.service';\n\n@Module({\n  controllers: [LunchMealMenuController],\n  providers: [LunchMealMenuService, PrismaService]\n})\nexport class LunchMealMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LunchMealMenuService.html":{"url":"injectables/LunchMealMenuService.html","title":"injectable - LunchMealMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LunchMealMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lunch-meal-menu/lunch-meal-menu.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: LunchMealMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LunchMealMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: LunchMealMenuDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lunch-meal-menu/lunch-meal-menu.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                LunchMealMenuDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/database/prisma.service';\nimport { LunchMealMenuDto } from 'src/lunch-meal-menu/dto/lunch-meal-menu.dto';\n\n@Injectable()\nexport class LunchMealMenuService {\n\n  constructor(private prisma: PrismaService){}\n\n  //CREATE ONE\n  async create(data: LunchMealMenuDto) {\n    const theMenu = await this.prisma.lunchMealMenu.create({\n      data,\n    });\n    return theMenu;\n  }\n\n  //FIND ALL\n  async findAll() {\n    return await this.prisma.lunchMealMenu.findMany();\n  }\n\n  //FIND ONE\n  async findOne(id: string) {\n    return await this.prisma.lunchMealMenu.findUnique({\n      where: {\n        id,\n      }\n    })\n  }\n\n  //EDIT ONE\n  async update(id: string, data: LunchMealMenuDto) {\n    return await this.prisma.lunchMealMenu.update({\n      data,\n      where: {\n        id,\n      }\n    })\n  }\n\n  //DELETE ONE\n  async remove(id: string) {\n    return await this.prisma.lunchMealMenu.delete({\n      where: {\n        id,\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderForLunchController.html":{"url":"controllers/OrderForLunchController.html","title":"controller - OrderForLunchController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderForLunchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order-for-lunch/order-for-lunch.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order-for-lunch\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateAllAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: OrderForLunchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                OrderForLunchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listAll')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: OrderForLunchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                OrderForLunchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllAttributes\n                        \n                    \n                \n            \n            \n                \nupdateAllAttributes(id: string, data: OrderForLunchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                OrderForLunchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Get, Post, Body, Patch, Param, Delete, Put } from '@nestjs/common/decorators';\nimport { ApiTags } from '@nestjs/swagger';\nimport { OrderForLunchDto } from './dto/order-for-lunch.dto';\nimport { OrderForLunchService } from './order-for-lunch.service';\n\n@ApiTags('OrderForLunchDto')\n@Controller('order-for-lunch')\nexport class OrderForLunchController {\n  constructor(private readonly orderForLunchService: OrderForLunchService) {}\n\n  @Post('/add')\n  create(@Body() data: OrderForLunchDto) {\n    return this.orderForLunchService.create(data);\n  }\n\n  @Get('/listAll')\n  findAll() {\n    return this.orderForLunchService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderForLunchService.findOne(id);\n  }\n  \n  @Put(':id')\n  updateAllAttributes(@Param('id') id: string, @Body() data: OrderForLunchDto) {\n    return this.orderForLunchService.update(id, data);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() data: OrderForLunchDto) {\n    return this.orderForLunchService.update(id, data);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.orderForLunchService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderForLunchDto.html":{"url":"classes/OrderForLunchDto.html","title":"class - OrderForLunchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderForLunchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order-for-lunch/dto/order-for-lunch.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                createdAt\n                            \n                            \n                                lunchMealId\n                            \n                            \n                                orderValue\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userOderId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:18\n                        \n                    \n\n            \n                \n                    Reservado para a QUANTIDADE de Itens de um Pedido.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:24\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de criação do registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchMealId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:36\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a FK para relacionamento da LunchMealMenu... Gerada via UUID\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:12\n                        \n                    \n\n            \n                \n                    Reservado para o VALOR / PREÇO do Pedido. Obtido pela multiplicação do Preço do Menu pela quantidade de Itens num pedido.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:30\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de alteração do registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order-for-lunch/dto/order-for-lunch.dto.ts:42\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a FK para relacionamento do Usuário solicitante... Gerada via UUID\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime\"\n\nexport class OrderForLunchDto {\n\n    /**\n     * Reservado para o VALOR / PREÇO do Pedido. Obtido pela multiplicação do Preço do Menu pela quantidade de Itens num pedido.\n     * @example 123.23\n     */\n    orderValue: number\n\n     /**\n     * Reservado para a QUANTIDADE de Itens de um Pedido.\n     * @example 1\n     */\n    amount: number\n\n    /**\n     * Armazena automaticamente a data de criação do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    createdAt: Date | null\n\n    /**\n     * Armazena automaticamente a data de alteração do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    updatedAt: Date | null\n\n    /**\n     * Armazena automaticamente a FK para relacionamento da LunchMealMenu... Gerada via UUID\n     * @example a6584e78-508b-4b72-8f40-6e8b3efacbcd\n     */\n    lunchMealId: string\n\n    /**\n     * Armazena automaticamente a FK para relacionamento do Usuário solicitante... Gerada via UUID\n     * @example a6584e78-508b-4b72-8f40-6e8b3efacbcd\n     */\n    userOderId: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderForLunchModule.html":{"url":"modules/OrderForLunchModule.html","title":"module - OrderForLunchModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderForLunchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderForLunchModule\n\n\n\ncluster_OrderForLunchModule_providers\n\n\n\n\nOrderForLunchService\n\nOrderForLunchService\n\n\n\nOrderForLunchModule\n\nOrderForLunchModule\n\nOrderForLunchModule -->\n\nOrderForLunchService->OrderForLunchModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nOrderForLunchModule -->\n\nPrismaService->OrderForLunchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order-for-lunch/order-for-lunch.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderForLunchService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderForLunchController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderForLunchService } from './order-for-lunch.service';\nimport { OrderForLunchController } from './order-for-lunch.controller';\nimport { PrismaService } from 'src/database/prisma.service';\n\n@Module({\n  controllers: [OrderForLunchController],\n  providers: [OrderForLunchService, PrismaService]\n})\nexport class OrderForLunchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderForLunchService.html":{"url":"injectables/OrderForLunchService.html","title":"injectable - OrderForLunchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderForLunchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order-for-lunch/order-for-lunch.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order-for-lunch/order-for-lunch.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: OrderForLunchDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                OrderForLunchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: OrderForLunchDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order-for-lunch/order-for-lunch.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                OrderForLunchDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/database/prisma.service';\nimport { OrderForLunchDto } from './dto/order-for-lunch.dto';\n\n@Injectable()\nexport class OrderForLunchService {\n\n  constructor(private prisma: PrismaService){}\n\n  //CREATE ONE\n  async create(data: OrderForLunchDto) {\n    const theOrder = await this.prisma.orderForLunch.create({\n      data,\n    });\n    return theOrder;\n  }\n\n  //FIND ALL\n  async findAll() {\n    return await this.prisma.orderForLunch.findMany();\n  }\n\n  //FIND ONE\n  async findOne(id: string) {\n    return await this.prisma.orderForLunch.findUnique({\n      where: {\n        id,\n      }\n    })\n  }\n\n  //EDIT ONE\n  async update(id: string, data: OrderForLunchDto) {\n    return await this.prisma.orderForLunch.update({\n      data,\n      where: {\n        id,\n      }\n    })\n  }\n\n  //DELETE ONE\n  async remove(id: string) {\n    return await this.prisma.orderForLunch.delete({\n      where: {\n        id,\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/database/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/database/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                updateAllAttributes\n                            \n                            \n                                updatePartialAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(data: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/add')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/listAll')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAllAttributes\n                        \n                    \n                \n            \n            \n                \nupdateAllAttributes(id: string, data: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePartialAttributes\n                        \n                    \n                \n            \n            \n                \nupdatePartialAttributes(id: string, data: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Body, Delete, Get, Param, Patch, Post, Put } from '@nestjs/common/decorators';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserDTO } from './dto/user.dto';\nimport { UserService } from './user.service';\n\n@ApiTags('Users')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/add')\n  addUser(@Body() data: UserDTO){\n    return this.userService.create(data);\n  }\n\n  @Get('/listAll')\n  findAll(){\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Put(':id')\n  updateAllAttributes(@Param('id') id: string, @Body() data: UserDTO){\n    return this.userService.update(id, data);\n  }\n\n  @Patch(':id')\n  updatePartialAttributes(@Param('id') id: string, @Body() data: UserDTO){\n    return this.userService.update(id, data);\n  }\n\n  @Delete(':id')\n   remove(@Param('id') id: string){\n    return this.userService.remove(id);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO-FULL: Padrão que representa a Entidade / Model no Prisma para Usuário...\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                idCompanyEmployee\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                passWord\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:39\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de criação do registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:15\n                        \n                    \n\n            \n                \n                    Reservado para o primeiro nome apenas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idCompanyEmployee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:9\n                        \n                    \n\n            \n                \n                    Esse atributo é baseado no número de registro do empregado Cassems. Geralmente apenas 04 digitos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:33\n                        \n                    \n\n            \n                \n                    Reservado para identificar quando o usuário está ativo ou não.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n            \n                \n                    Reservado para o sobre-nome completo.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passWord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:27\n                        \n                    \n\n            \n                \n                    Reservado para senha que será criada no código via HashCode Xpto.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:45\n                        \n                    \n\n            \n                \n                    Armazena automaticamente a data de alteração do registro.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserDTO {\n    /**\n     * Esse atributo é baseado no número de registro do empregado Cassems. Geralmente apenas 04 digitos.\n     * @example 1234\n     */\n    idCompanyEmployee: string;\n\n    /**\n     * Reservado para o primeiro nome apenas.\n     * @example Fulano\n     */\n    firstName: string;\n\n    /**\n     * Reservado para o sobre-nome completo.\n     * @example Silva\n     */\n    lastName: string;\n\n    /**\n     * Reservado para senha que será criada no código via HashCode Xpto.\n     * @example xxxxxxxxxxxxxxxx\n     */\n    passWord: string;\n\n    /**\n     * Reservado para identificar quando o usuário está ativo ou não.\n     * @example true\n     */\n    isActive: boolean;\n\n    /**\n     * Armazena automaticamente a data de criação do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    createdAt?: Date | null\n\n    /**\n     * Armazena automaticamente a data de alteração do registro.\n     * @example 2023-02-07T22:54:19.505Z\n     */\n    updatedAt?: Date | null\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaService } from 'src/database/prisma.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService, PrismaService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, data: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/database/prisma.service';\nimport { UserDTO } from 'src/user/dto/user.dto'\n\n@Injectable()\nexport class UserService {\n\n    constructor(private prisma: PrismaService){}\n\n//CREATE ONE\nasync create(data: UserDTO){\n    const theUser = await this.prisma.user.create({\n        data,\n    });\n    return theUser\n}\n\n//FIND ALL\nasync findAll(){\n    return await this.prisma.user.findMany();\n}\n\n//FIND ONE\nasync findOne(id: string) {\nreturn await this.prisma.user.findUnique({\n    where: {\n        id,\n    },\n});\n}\n\n//EDIT ONE\nasync update(id: string, data: UserDTO){\n    return await this.prisma.user.update({\n        data,\n        where: {\n            id,\n        },\n    });\n}\n\n//DELETE ONE\nasync remove(id: string){\n    return await this.prisma.user.delete({\n        where: {\n            id,\n        },\n    });\n}\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lunch-box-type/dto/lunch-box-type.dto.ts\n            \n            class\n            LunchBoxTypeDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lunch-box-type/lunch-box-type.controller.ts\n            \n            controller\n            LunchBoxTypeController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lunch-box-type/lunch-box-type.service.ts\n            \n            injectable\n            LunchBoxTypeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lunch-meal-menu/dto/lunch-meal-menu.dto.ts\n            \n            class\n            LunchMealMenuDto\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/lunch-meal-menu/lunch-meal-menu.controller.ts\n            \n            controller\n            LunchMealMenuController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lunch-meal-menu/lunch-meal-menu.service.ts\n            \n            injectable\n            LunchMealMenuService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order-for-lunch/dto/order-for-lunch.dto.ts\n            \n            class\n            OrderForLunchDto\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/order-for-lunch/order-for-lunch.controller.ts\n            \n            controller\n            OrderForLunchController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order-for-lunch/order-for-lunch.service.ts\n            \n            injectable\n            OrderForLunchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @prisma/client : ^4.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LunchBoxTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LunchMealMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderForLunchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LunchBoxTypeModule\n\n\n\ncluster_LunchBoxTypeModule_providers\n\n\n\ncluster_LunchMealMenuModule\n\n\n\ncluster_LunchMealMenuModule_providers\n\n\n\ncluster_OrderForLunchModule\n\n\n\ncluster_OrderForLunchModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nLunchBoxTypeModule\n\nLunchBoxTypeModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLunchBoxTypeModule->AppModule\n\n\n\n\n\nLunchMealMenuModule\n\nLunchMealMenuModule\n\nAppModule -->\n\nLunchMealMenuModule->AppModule\n\n\n\n\n\nOrderForLunchModule\n\nOrderForLunchModule\n\nAppModule -->\n\nOrderForLunchModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLunchBoxTypeService\n\nLunchBoxTypeService\n\nLunchBoxTypeModule -->\n\nLunchBoxTypeService->LunchBoxTypeModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nLunchBoxTypeModule -->\n\nPrismaService->LunchBoxTypeModule\n\n\n\nLunchMealMenuModule -->\n\nPrismaService->LunchMealMenuModule\n\n\n\nOrderForLunchModule -->\n\nPrismaService->OrderForLunchModule\n\n\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nLunchMealMenuService\n\nLunchMealMenuService\n\nLunchMealMenuModule -->\n\nLunchMealMenuService->LunchMealMenuModule\n\n\n\n\n\nOrderForLunchService\n\nOrderForLunchService\n\nOrderForLunchModule -->\n\nOrderForLunchService->OrderForLunchModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
